$ date -u; python cidb_to_ocds2.py; date -u
Mon Oct 16 18:23:26 UTC 2017
Read from ./data2/contractors_20150923.jsonl
Write to ./data2/ocds-contractors_20150923.jsonl
Traceback (most recent call last):
  File "cidb_to_ocds2.py", line 162, in <module>
    main()
  File "cidb_to_ocds2.py", line 158, in main
    cidb_to_ocds(path, name_ls)
  File "cidb_to_ocds2.py", line 141, in cidb_to_ocds
    ocds_data = ocds_package(data)
  File "cidb_to_ocds2.py", line 103, in ocds_package
    record_list.append(ocds_record(parse)) # only one record
  File "cidb_to_ocds2.py", line 85, in ocds_record
    release_data = ocds_release(parse)
  File "cidb_to_ocds2.py", line 47, in ocds_release
    award = ocds_award(project)
  File "cidb_to_ocds2.py", line 35, in ocds_award
    "amount": float(cidb_amount),
ValueError: could not convert string to float: 
Mon Oct 16 18:24:18 UTC 2017

$ pwd | cut -d '/' -f 5
ocds-scripts

$ # source data
$ wc -l cidb/data2/contractors_20150923.jsonl
217898 cidb/data2/contractors_20150923.jsonl

$ # partially converted data, only until the line before error
$ wc -l cidb/data2/ocds-contractors_20150923.jsonl
184599 cidb/data2/ocds-contractors_20150923.jsonl
$ # ^ this means the next line, 184600 has something that caused error

$ # get size of that bad line in bytes...
$ head -n 184600 cidb/data2/contractors_20150923.jsonl | tail -n 1 | wc -c
2327
$ # ...then estimate the last few hundred bytes of that line,
$ # where the bad data happen to appear
$ head -n 184600 cidb/data2/contractors_20150923.jsonl | tail -n 1 | tail -c 400
dates": "23-10-2013", "location": "", "value": "42,000.00"}, {"project": "MAINTENANCE BUILD FEM\rTO DEMOLISH WAREHOUSE PARTITION FOR LOT F1-16 TO F1-27 AND MAKING GOOD ALL DEFECT OCCURRED FROM THE DEMOLISH WOKS. NET PRICE RM 93,000.00\r\rMAINTENANCE BUILD FEM\rProposed renovation works at Cargo Terminal Building B (CTB \"B\") for Lot #1A, 1B, 1C, 2 &#", "dates": "", "location": "", "value": ""}]}
$ # ^ and bingo, the value was empty string!
$ # first created script doesn't consider that bad data

$ # add if-condition to handle that bad data,
$ # then run again the script
$ date -u; python cidb_to_ocds2.py; date -u
Mon Oct 16 18:47:40 UTC 2017
Read from ./data2/contractors_20150923.jsonl
Write to ./data2/ocds-contractors_20150923.jsonl
Finish
Mon Oct 16 18:48:42 UTC 2017
$ # and done!
